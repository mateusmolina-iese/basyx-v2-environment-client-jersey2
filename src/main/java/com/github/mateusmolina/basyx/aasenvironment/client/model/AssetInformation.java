/*
 * BaSyx AAS Environment Component
 * AAS Environment API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: basyx-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.mateusmolina.basyx.aasenvironment.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.github.mateusmolina.basyx.aasenvironment.client.model.Resource;
import com.github.mateusmolina.basyx.aasenvironment.client.model.SpecificAssetID;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.github.mateusmolina.basyx.aasenvironment.client.invoker.JSON;


/**
 * AssetInformation
 */
@JsonPropertyOrder({
  AssetInformation.JSON_PROPERTY_ASSET_KIND,
  AssetInformation.JSON_PROPERTY_ASSET_TYPE,
  AssetInformation.JSON_PROPERTY_DEFAULT_THUMBNAIL,
  AssetInformation.JSON_PROPERTY_GLOBAL_ASSET_I_D,
  AssetInformation.JSON_PROPERTY_SPECIFIC_ASSET_IDS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-03T13:20:12.648099800+02:00[Europe/Berlin]")
public class AssetInformation {
  /**
   * Gets or Sets assetKind
   */
  public enum AssetKindEnum {
    INSTANCE("INSTANCE"),
    
    NOT_APPLICABLE("NOT_APPLICABLE"),
    
    TYPE("TYPE");

    private String value;

    AssetKindEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AssetKindEnum fromValue(String value) {
      for (AssetKindEnum b : AssetKindEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ASSET_KIND = "assetKind";
  private AssetKindEnum assetKind;

  public static final String JSON_PROPERTY_ASSET_TYPE = "assetType";
  private String assetType;

  public static final String JSON_PROPERTY_DEFAULT_THUMBNAIL = "defaultThumbnail";
  private Resource defaultThumbnail;

  public static final String JSON_PROPERTY_GLOBAL_ASSET_I_D = "globalAssetID";
  private String globalAssetID;

  public static final String JSON_PROPERTY_SPECIFIC_ASSET_IDS = "specificAssetIds";
  private List<SpecificAssetID> specificAssetIds;

  public AssetInformation() { 
  }

  public AssetInformation assetKind(AssetKindEnum assetKind) {
    this.assetKind = assetKind;
    return this;
  }

   /**
   * Get assetKind
   * @return assetKind
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AssetKindEnum getAssetKind() {
    return assetKind;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetKind(AssetKindEnum assetKind) {
    this.assetKind = assetKind;
  }


  public AssetInformation assetType(String assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssetType() {
    return assetType;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetType(String assetType) {
    this.assetType = assetType;
  }


  public AssetInformation defaultThumbnail(Resource defaultThumbnail) {
    this.defaultThumbnail = defaultThumbnail;
    return this;
  }

   /**
   * Get defaultThumbnail
   * @return defaultThumbnail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_THUMBNAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Resource getDefaultThumbnail() {
    return defaultThumbnail;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_THUMBNAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultThumbnail(Resource defaultThumbnail) {
    this.defaultThumbnail = defaultThumbnail;
  }


  public AssetInformation globalAssetID(String globalAssetID) {
    this.globalAssetID = globalAssetID;
    return this;
  }

   /**
   * Get globalAssetID
   * @return globalAssetID
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GLOBAL_ASSET_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGlobalAssetID() {
    return globalAssetID;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_ASSET_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalAssetID(String globalAssetID) {
    this.globalAssetID = globalAssetID;
  }


  public AssetInformation specificAssetIds(List<SpecificAssetID> specificAssetIds) {
    this.specificAssetIds = specificAssetIds;
    return this;
  }

  public AssetInformation addSpecificAssetIdsItem(SpecificAssetID specificAssetIdsItem) {
    if (this.specificAssetIds == null) {
      this.specificAssetIds = new ArrayList<>();
    }
    this.specificAssetIds.add(specificAssetIdsItem);
    return this;
  }

   /**
   * Get specificAssetIds
   * @return specificAssetIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECIFIC_ASSET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SpecificAssetID> getSpecificAssetIds() {
    return specificAssetIds;
  }


  @JsonProperty(JSON_PROPERTY_SPECIFIC_ASSET_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecificAssetIds(List<SpecificAssetID> specificAssetIds) {
    this.specificAssetIds = specificAssetIds;
  }


  /**
   * Return true if this AssetInformation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetInformation assetInformation = (AssetInformation) o;
    return Objects.equals(this.assetKind, assetInformation.assetKind) &&
        Objects.equals(this.assetType, assetInformation.assetType) &&
        Objects.equals(this.defaultThumbnail, assetInformation.defaultThumbnail) &&
        Objects.equals(this.globalAssetID, assetInformation.globalAssetID) &&
        Objects.equals(this.specificAssetIds, assetInformation.specificAssetIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetKind, assetType, defaultThumbnail, globalAssetID, specificAssetIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetInformation {\n");
    sb.append("    assetKind: ").append(toIndentedString(assetKind)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    defaultThumbnail: ").append(toIndentedString(defaultThumbnail)).append("\n");
    sb.append("    globalAssetID: ").append(toIndentedString(globalAssetID)).append("\n");
    sb.append("    specificAssetIds: ").append(toIndentedString(specificAssetIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

