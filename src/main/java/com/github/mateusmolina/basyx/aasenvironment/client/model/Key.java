/*
 * BaSyx AAS Environment Component
 * AAS Environment API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: basyx-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.mateusmolina.basyx.aasenvironment.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.github.mateusmolina.basyx.aasenvironment.client.invoker.JSON;


/**
 * Key
 */
@JsonPropertyOrder({
  Key.JSON_PROPERTY_TYPE,
  Key.JSON_PROPERTY_VALUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-03T13:20:12.648099800+02:00[Europe/Berlin]")
public class Key {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    ANNOTATED_RELATIONSHIP_ELEMENT("ANNOTATED_RELATIONSHIP_ELEMENT"),
    
    ASSET_ADMINISTRATION_SHELL("ASSET_ADMINISTRATION_SHELL"),
    
    BASIC_EVENT_ELEMENT("BASIC_EVENT_ELEMENT"),
    
    BLOB("BLOB"),
    
    CAPABILITY("CAPABILITY"),
    
    CONCEPT_DESCRIPTION("CONCEPT_DESCRIPTION"),
    
    DATA_ELEMENT("DATA_ELEMENT"),
    
    ENTITY("ENTITY"),
    
    EVENT_ELEMENT("EVENT_ELEMENT"),
    
    FILE("FILE"),
    
    FRAGMENT_REFERENCE("FRAGMENT_REFERENCE"),
    
    GLOBAL_REFERENCE("GLOBAL_REFERENCE"),
    
    IDENTIFIABLE("IDENTIFIABLE"),
    
    MULTI_LANGUAGE_PROPERTY("MULTI_LANGUAGE_PROPERTY"),
    
    OPERATION("OPERATION"),
    
    PROPERTY("PROPERTY"),
    
    RANGE("RANGE"),
    
    REFERABLE("REFERABLE"),
    
    REFERENCE_ELEMENT("REFERENCE_ELEMENT"),
    
    RELATIONSHIP_ELEMENT("RELATIONSHIP_ELEMENT"),
    
    SUBMODEL("SUBMODEL"),
    
    SUBMODEL_ELEMENT("SUBMODEL_ELEMENT"),
    
    SUBMODEL_ELEMENT_COLLECTION("SUBMODEL_ELEMENT_COLLECTION"),
    
    SUBMODEL_ELEMENT_LIST("SUBMODEL_ELEMENT_LIST");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;

  public Key() { 
  }

  public Key type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Key value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(String value) {
    this.value = value;
  }


  /**
   * Return true if this Key object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Key key = (Key) o;
    return Objects.equals(this.type, key.type) &&
        Objects.equals(this.value, key.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Key {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

