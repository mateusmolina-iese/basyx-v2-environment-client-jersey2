/*
 * BaSyx AAS Environment Component
 * AAS Environment API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: basyx-dev@eclipse.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.github.mateusmolina.basyx.aasenvironment.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.github.mateusmolina.basyx.aasenvironment.client.model.Reference;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.github.mateusmolina.basyx.aasenvironment.client.invoker.JSON;


/**
 * EmbeddedDataSpecification
 */
@JsonPropertyOrder({
  EmbeddedDataSpecification.JSON_PROPERTY_DATA_SPECIFICATION,
  EmbeddedDataSpecification.JSON_PROPERTY_DATA_SPECIFICATION_CONTENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-03T13:20:12.648099800+02:00[Europe/Berlin]")
public class EmbeddedDataSpecification {
  public static final String JSON_PROPERTY_DATA_SPECIFICATION = "dataSpecification";
  private Reference dataSpecification;

  public static final String JSON_PROPERTY_DATA_SPECIFICATION_CONTENT = "dataSpecificationContent";
  private Object dataSpecificationContent;

  public EmbeddedDataSpecification() { 
  }

  public EmbeddedDataSpecification dataSpecification(Reference dataSpecification) {
    this.dataSpecification = dataSpecification;
    return this;
  }

   /**
   * Get dataSpecification
   * @return dataSpecification
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_SPECIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Reference getDataSpecification() {
    return dataSpecification;
  }


  @JsonProperty(JSON_PROPERTY_DATA_SPECIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataSpecification(Reference dataSpecification) {
    this.dataSpecification = dataSpecification;
  }


  public EmbeddedDataSpecification dataSpecificationContent(Object dataSpecificationContent) {
    this.dataSpecificationContent = dataSpecificationContent;
    return this;
  }

   /**
   * Get dataSpecificationContent
   * @return dataSpecificationContent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA_SPECIFICATION_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getDataSpecificationContent() {
    return dataSpecificationContent;
  }


  @JsonProperty(JSON_PROPERTY_DATA_SPECIFICATION_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataSpecificationContent(Object dataSpecificationContent) {
    this.dataSpecificationContent = dataSpecificationContent;
  }


  /**
   * Return true if this EmbeddedDataSpecification object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmbeddedDataSpecification embeddedDataSpecification = (EmbeddedDataSpecification) o;
    return Objects.equals(this.dataSpecification, embeddedDataSpecification.dataSpecification) &&
        Objects.equals(this.dataSpecificationContent, embeddedDataSpecification.dataSpecificationContent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataSpecification, dataSpecificationContent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmbeddedDataSpecification {\n");
    sb.append("    dataSpecification: ").append(toIndentedString(dataSpecification)).append("\n");
    sb.append("    dataSpecificationContent: ").append(toIndentedString(dataSpecificationContent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

